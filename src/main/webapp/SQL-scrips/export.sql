--------------------------------------------------------
--  File created - 03-21-2016
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_BOOK
--------------------------------------------------------

   CREATE SEQUENCE  "BOOKSHOP"."SEQUENCE_BOOK"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_CONTENT
--------------------------------------------------------

   CREATE SEQUENCE  "BOOKSHOP"."SEQUENCE_CONTENT"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_CUSTOMER
--------------------------------------------------------

   CREATE SEQUENCE  "BOOKSHOP"."SEQUENCE_CUSTOMER"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_ITEMS
--------------------------------------------------------

   CREATE SEQUENCE  "BOOKSHOP"."SEQUENCE_ITEMS"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_ORDERS
--------------------------------------------------------

   CREATE SEQUENCE  "BOOKSHOP"."SEQUENCE_ORDERS"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table CONTENR_ORDER
--------------------------------------------------------

  CREATE TABLE "BOOKSHOP"."CONTENR_ORDER" 
   (	"ID_CONTENT" NUMBER, 
	"ID_ORDER" NUMBER, 
	"ID_BOOK" NUMBER, 
	"AMOUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "BOOKSHOP"."CUSTOMER" 
   (	"ID_CUSTOMER" NUMBER, 
	"SURNAME" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"PASSWORD" NUMBER, 
	"E_MAIL" VARCHAR2(50 BYTE), 
	"PHOME_NUBMER" VARCHAR2(12 BYTE), 
	"ROLE" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "BOOKSHOP"."CUSTOMER"."ROLE" IS 'if  is system - 0, admin -10, user -1';
--------------------------------------------------------
--  DDL for Table ITEM
--------------------------------------------------------

  CREATE TABLE "BOOKSHOP"."ITEM" 
   (	"ID_ITEM" NUMBER, 
	"NAME" VARCHAR2(50 BYTE), 
	"PARENT_ID" NUMBER, 
	"DESCRIPTION" VARCHAR2(150 BYTE), 
	"TYPE" NUMBER, 
	"ID_PROPERTIES" NUMBER DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "BOOKSHOP"."ITEM"."PARENT_ID" IS 'if is rubric-ID_section, if is book - ID_rubric';
   COMMENT ON COLUMN "BOOKSHOP"."ITEM"."DESCRIPTION" IS '0- if it is book,1-rubric,2-section';
--------------------------------------------------------
--  DDL for Table ORDERS
--------------------------------------------------------

  CREATE TABLE "BOOKSHOP"."ORDERS" 
   (	"ID_ORDER" NUMBER, 
	"ID_CUSTOMER" NUMBER, 
	"DATA" DATE, 
	"ID_CONTENT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROPERTIES
--------------------------------------------------------

  CREATE TABLE "BOOKSHOP"."PROPERTIES" 
   (	"ID_BOOK" NUMBER, 
	"AUTHOR" VARCHAR2(100 BYTE), 
	"PAGES" NUMBER, 
	"PRICE" FLOAT(126), 
	"AMOUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into BOOKSHOP.CONTENR_ORDER
SET DEFINE OFF;
REM INSERTING into BOOKSHOP.CUSTOMER
SET DEFINE OFF;
Insert into BOOKSHOP.CUSTOMER (ID_CUSTOMER,SURNAME,NAME,PASSWORD,E_MAIL,PHOME_NUBMER,ROLE) values ('21','Shinoda',null,null,null,null,'1');
REM INSERTING into BOOKSHOP.ITEM
SET DEFINE OFF;
REM INSERTING into BOOKSHOP.ORDERS
SET DEFINE OFF;
REM INSERTING into BOOKSHOP.PROPERTIES
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index ID_ITEM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."ID_ITEM_PK" ON "BOOKSHOP"."ITEM" ("ID_ITEM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ID_BOOK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."ID_BOOK_PK" ON "BOOKSHOP"."PROPERTIES" ("ID_BOOK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ID_CUSTOMER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."ID_CUSTOMER_PK" ON "BOOKSHOP"."CUSTOMER" ("ID_CUSTOMER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDERS_INDEX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."ORDERS_INDEX1" ON "BOOKSHOP"."ORDERS" ("ID_CONTENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CONTENR_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."CONTENR_ORDER_PK" ON "BOOKSHOP"."CONTENR_ORDER" ("ID_CONTENT", "ID_BOOK", "ID_ORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOOKSHOP"."ORDERS_PK" ON "BOOKSHOP"."ORDERS" ("ID_ORDER", "ID_CUSTOMER", "ID_CONTENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."ORDERS" ADD CONSTRAINT "ORDERS_UK1" UNIQUE ("ID_CONTENT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."ORDERS" MODIFY ("ID_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "BOOKSHOP"."ORDERS" MODIFY ("ID_CUSTOMER" NOT NULL ENABLE);
  ALTER TABLE "BOOKSHOP"."ORDERS" ADD CONSTRAINT "ORDERS_PK" PRIMARY KEY ("ID_ORDER", "ID_CUSTOMER", "ID_CONTENT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."ORDERS" MODIFY ("ID_ORDER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."CUSTOMER" ADD CONSTRAINT "ID_CUSTOMER" PRIMARY KEY ("ID_CUSTOMER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."CUSTOMER" MODIFY ("ID_CUSTOMER" NOT NULL ENABLE);
  ALTER TABLE "BOOKSHOP"."CUSTOMER" MODIFY ("ROLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTENR_ORDER
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_PK" PRIMARY KEY ("ID_CONTENT", "ID_BOOK", "ID_ORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."CONTENR_ORDER" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  ALTER TABLE "BOOKSHOP"."CONTENR_ORDER" MODIFY ("ID_CONTENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROPERTIES
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."PROPERTIES" ADD CONSTRAINT "ID_BOOK" PRIMARY KEY ("ID_BOOK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."PROPERTIES" MODIFY ("ID_BOOK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ITEM
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."ITEM" ADD CONSTRAINT "ITEM_PK" PRIMARY KEY ("ID_ITEM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOOKSHOP"."ITEM" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table CONTENR_ORDER
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_FK1" FOREIGN KEY ("ID_CONTENT")
	  REFERENCES "BOOKSHOP"."ORDERS" ("ID_CONTENT") ENABLE;
  ALTER TABLE "BOOKSHOP"."CONTENR_ORDER" ADD CONSTRAINT "CONTENR_ORDER_FK2" FOREIGN KEY ("ID_BOOK")
	  REFERENCES "BOOKSHOP"."ITEM" ("ID_ITEM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEM
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."ITEM" ADD CONSTRAINT "ITEM_FK1" FOREIGN KEY ("ID_PROPERTIES")
	  REFERENCES "BOOKSHOP"."PROPERTIES" ("ID_BOOK") ENABLE;
  ALTER TABLE "BOOKSHOP"."ITEM" ADD CONSTRAINT "PARENT_FK" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "BOOKSHOP"."ITEM" ("ID_ITEM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "BOOKSHOP"."ORDERS" ADD CONSTRAINT "ORDERS_CUSTOMER_FK" FOREIGN KEY ("ID_CUSTOMER")
	  REFERENCES "BOOKSHOP"."CUSTOMER" ("ID_CUSTOMER") ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_NEW_CUSTOMER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BOOKSHOP"."TR_NEW_CUSTOMER" 
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
SELECT SEQUENCE_CUSTOMER.NEXTVAL INTO :NEW.ID_CUSTOMER FROM dual;
END;
/
ALTER TRIGGER "BOOKSHOP"."TR_NEW_CUSTOMER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_NEW_ITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BOOKSHOP"."TR_NEW_ITEM" 
BEFORE INSERT ON ITEM
FOR EACH ROW
DECLARE id_t NUMBER;
type_t NUMBER;
BEGIN
SELECT SEQUENCE_ITEMS.NEXTVAL INTO :NEW.ID_ITEM FROM dual;
IF inserting then 
type_t:=:new.TYPE;
IF type_t =0 THEN
id_t:=SEQUENCE_BOOK.NEXTVAL;
SELECT id_t INTO :NEW.ID_PROPERTIES FROM dual;
INSERT INTO PROPERTIES(ID_BOOK) values(id_t);
END IF;
END IF;
END;
/
ALTER TRIGGER "BOOKSHOP"."TR_NEW_ITEM" ENABLE;
--------------------------------------------------------
--  DDL for Function ORDER_COST
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BOOKSHOP"."ORDER_COST" (ID_OR IN NUMBER)
   RETURN FLOAT
   IS 
    TOTAL_COST FLOAT;
   BEGIN
   SELECT SUM(c.AMOUNT*p.PRICE) 
   INTO TOTAL_COST
   FROM CONTENR_ORDER c, PROPERTIES p, ITEM i
   WHERE i.ID_PROPERTIES=p.ID_BOOK
   AND ID_OR = c.ID_ORDER
   AND c.ID_BOOK=i.ID_ITEM;
 
   RETURN TOTAL_COST;
   END;

/
--------------------------------------------------------
--  DDL for Function ORDER_COST_DISCOUNT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "BOOKSHOP"."ORDER_COST_DISCOUNT" (ID_OR IN NUMBER)
   RETURN FLOAT
   IS 
   TOTAL_COST FLOAT;
   DISCOUNT FLOAT;
   BEGIN
   SELECT SUM(c.AMOUNT*p.PRICE) 
   INTO TOTAL_COST
   FROM CONTENR_ORDER c, PROPERTIES p, ITEM i
   WHERE i.ID_PROPERTIES=p.ID_BOOK
   AND ID_OR = c.ID_ORDER
   AND c.ID_BOOK=i.ID_ITEM;
  IF(TOTAL_COST>200) THEN
    DISCOUNT:=TOTAL_COST*0.2;
    TOTAL_COST:=TOTAL_COST-DISCOUNT;
    END IF;
   RETURN TOTAL_COST;
   END;

/
--------------------------------------------------------
--  DDL for Procedure ADDBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BOOKSHOP"."ADDBOOK" 
  (Name_p IN varchar2,
  DESCRIPTION_p IN varchar2,
  RUBRIC_p IN NUMBER,
  AUTHOR_p IN varchar2,
  PAGES_p IN NUMBER,
  PRICE_p IN FLOAT,
  AMOUNT_p IN NUMBER
  )

  IS
	BEGIN 
  INSERT INTO ITEM(NAME,TYPE,DESCRIPTION,PARENT_ID) values(Name_p,0,DESCRIPTION_p,RUBRIC_p);
 

   UPDATE  PROPERTIES 
  SET AUTHOR=AUTHOR_p,PAGES=PAGES_p,PRICE=PRICE_p,AMOUNT=AMOUNT_p
  WHERE PROPERTIES.ID_BOOK=(SELECT ID_PROPERTIES  FROM ITEM i,PROPERTIES
WHERE i.ID_PROPERTIES=PROPERTIES.ID_BOOK
 AND  i.NAME=Name_p
AND i.TYPE=0
AND i.DESCRIPTION = DESCRIPTION_p
 AND i.PARENT_ID = RUBRIC_p);
 

  COMMIT;
EXCEPTION
WHEN OTHERS THEN
ROLLBACK;
 RETURN;
  END;

/
--------------------------------------------------------
--  DDL for Procedure ADDORDER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BOOKSHOP"."ADDORDER" 
  (
  CUSTOMER IN NUMBER,
  BOOK IN NUMBER,
  AMOUNT_c IN NUMBER,
  DATA_C IN DATE
  )

  IS
   id_or NUMBER;
    id_con NUMBER;
	BEGIN 
  id_or:=SEQUENCE_ORDERS.NEXTVAL;
  id_con:=SEQUENCE_CONTENT.NEXTVAL;
INSERT INTO ORDERS(ID_ORDER,ID_CUSTOMER,DATA,ID_CONTENT) values(id_or,CUSTOMER,DATA_C,id_con);
 INSERT INTO CONTENR_ORDER(ID_CONTENT,ID_ORDER,ID_BOOK,AMOUNT) values(id_con,id_or,BOOK,AMOUNT_c);
 
  

  
  COMMIT;
 EXCEPTION
 WHEN OTHERS THEN
 ROLLBACK;
 RETURN;
  END;

/
